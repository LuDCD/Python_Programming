setwd("~/Desktop/Machine Learning A-Z/Part 5 - Association Rule Learning/Section 28 - Apriori")
dataset=read.csv('Market_Basket_Optimisation.csv')
View(dataset)
dataset=read.csv('Market_Basket_Optimisation.csv',header=FALSE)
View(dataset)
library(arules)
dataset=read.csv('Market_Basket_Optimisation.csv',header=FALSE)
dataset=read.transactions('Market_Basket_Optimisation.csv', sep=',',rm.duplicates=TRUE)
summary(dataset)
itemFrequencyPlot(dataset,topN=100)
itemFrequencyPlot(dataset,topN=10)
# Apriori
# Data Preprocessing
# install.packages('arules')
library(arules)
dataset=read.csv('Market_Basket_Optimisation.csv',header=FALSE)
dataset=read.transactions('Market_Basket_Optimisation.csv', sep=',',rm.duplicates=TRUE)
summary(dataset)
itemFrequencyPlot(dataset,topN=10)
dataset
# Apriori
# Data Preprocessing
# install.packages('arules')
library(arules)
dataset=read.csv('Market_Basket_Optimisation.csv',header=FALSE)
dataset=read.transactions('Market_Basket_Optimisation.csv', sep=',',rm.duplicates=TRUE)
summary(dataset)
itemFrequencyPlot(dataset,topN=10)
# Data Preprocessing
# install.packages('arules')
library(arules)
dataset=read.csv('Market_Basket_Optimisation.csv',header=FALSE)
dataset=read.transactions('Market_Basket_Optimisation.csv', sep=',',rm.duplicates=TRUE)
summary(dataset)
itemFrequencyPlot(dataset,topN=10)
# Data Preprocessing
# install.packages('arules')
library(arules)
dataset=read.csv('Market_Basket_Optimisation.csv',header=FALSE)
dataset=read.transactions('Market_Basket_Optimisation.csv', sep=',',rm.duplicates=TRUE)
summary(dataset)
itemFrequencyPlot(dataset,topN=100)
itemFrequencyPlot(dataset,topN=10)
3*7/7500
rules=apriori(data=dataset, parameter=list(support=0.003 ,confidence=0.8 ))
rules=apriori(data=dataset, parameter=list(support=0.003 ,confidence=0.4 ))
itemFrequencyPlot(dataset,topN=10)
inspect(sort(rules,by='lift')[1:10])
# Apriori
# Data Preprocessing
# install.packages('arules')
library(arules)
dataset=read.csv('Market_Basket_Optimisation.csv',header=FALSE)
dataset=read.transactions('Market_Basket_Optimisation.csv', sep=',',rm.duplicates=TRUE)
summary(dataset)
itemFrequencyPlot(dataset,topN=10)
# Training Apriori on the dataset
rules=apriori(data=dataset, parameter=list(support=0.003 ,confidence=0.2 ))
# Visualixing the results
inspect(sort(rules,by='lift')[1:10])
# Apriori
# Data Preprocessing
# install.packages('arules')
library(arules)
dataset=read.csv('Market_Basket_Optimisation.csv',header=FALSE)
dataset=read.transactions('Market_Basket_Optimisation.csv', sep=',',rm.duplicates=TRUE)
summary(dataset)
itemFrequencyPlot(dataset,topN=10)
# Training Apriori on the dataset
rules=apriori(data=dataset, parameter=list(support=0.004 ,confidence=0.2 ))
# Visualixing the results
inspect(sort(rules,by='lift')[1:10])
# Apriori
# Data Preprocessing
# install.packages('arules')
library(arules)
dataset=read.csv('Market_Basket_Optimisation.csv',header=FALSE)
dataset=read.transactions('Market_Basket_Optimisation.csv', sep=',',rm.duplicates=TRUE)
summary(dataset)
itemFrequencyPlot(dataset,topN=10)
# Training Apriori on the dataset
rules=apriori(data=dataset, parameter=list(support=0.003 ,confidence=0.4 ))
inspect(sort(rules,by = 'lift')[1:10])
# Training Apriori on the dataset
rules=apriori(data=dataset, parameter=list(support=0.003 ,confidence=0.2 ))
# Visualixing the results
inspect(sort(rules,by = 'lift')[1:10])
4*7/7500
# Training Apriori on the dataset
rules=apriori(data=dataset, parameter=list(support=0.004 ,confidence=0.2 ))
# Visualixing the results
inspect(sort(rules,by = 'lift')[1:10])
